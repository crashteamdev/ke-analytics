server:
  port: ${server.port}
  error:
    include-stacktrace: ALWAYS

management:
  security:
    flag: false
  server:
    port: ${management.port}
  metrics:
    prometheus:
      enabled: true
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
spring:
  application:
    name: ${project.name}
    output:
      ansi:
        enabled: always
  main:
    allow-bean-definition-overriding: true
  data:
    redis:
      host: marketdb-redis-do-user-9153772-0.b.db.ondigitalocean.com
      port: 25061
      username: default
      password: password
      ssl:
        enabled: false
  datasource:
    jdbcUrl: jdbc:postgresql://localhost:5432/ke-analytics
    username: postgres
    password: postgres
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: never
    properties:
      org.quartz.scheduler.instanceName: ke-analytics
      org.quartz.scheduler.instanceId: AUTO
      org.quartz.scheduler.skipUpdateCheck: true
      org.quartz.scheduler.threadsInheritContextClassLoaderOfInitializer: true
      org.quartz.threadPool.threadCount: 30
      org.quartz.threadPool.threadPriority: 5
      org.quartz.jobStore.isClustered: true
      org.quartz.jobStore.misfireThreshold: 30000
      org.quartz.jobStore.class: org.springframework.scheduling.quartz.LocalDataSourceJobStore
      org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
      org.quartz.jobStore.useProperties: false
      org.quartz.jobStore.tablePrefix: QRTZ_
  cache:
    cache-names:
      - ke-products-info
    redis:
      time-to-live: 60000
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com
          issuer-uri: https://securetoken.google.com/${FIREBASE_APP_NAME:marketdb-gloom}

kazanex:
  scheduleEnabled: false
  groupCron: '0 0/10 * * * ?'
  productCron: '0 0 0/3 * * ?'
  productCronV2: '0 0 0,21 ? * * *'
  aggregateCron: '0 0 0/6 * * ?'
  sellerCron: '0 0 0/3 * * ?'
  reportCleanUpCron: '0 0 0/1 * * ?'
  reportGenerateCron: '0/3 * * * * ?'
  productPositionCron: '0 0 3 ? * * *'
  pendingMessageCron: '0 0/5 0 ? * * *'
  throttlingMs: 1000
  reportLiveTimeHours: 24

service:
  proxy:
    url: http://localhost:8022

redis:
  stream:
    max-batch-size: 350
    batch-buffer-duration-ms: 2000
    batch-parallel-count: 5
    ke-product-info:
      streamName: ke-product-stream
      consumerGroup: ke-analytics-product-group
      consumerName: ke-analytics-product-consumer
    ke-product-position:
      streamName: ke-position-stream
      consumerGroup: ke-analytics-product-position-group
      consumerName: ke-analytics-position-consumer
    ke-category-info:
      streamName: ke-category-stream
      consumerGroup: ke-analytics-category-group
      consumerName: ke-analytics-category-consumer
    payment:
      streamName: payment-stream
      consumerGroup: ke-analytics-payment-group
      consumerName: ke-analytics-payment-consumer

clickhouse:
  url: "jdbc:clickhouse://${CLICKHOUSE_HOST:localhost}:${CLICKHOUSE_PORT:8443}/${CLICKHOUSE_DB:uzum}"
  user: "dbuser"
  password: ${CLICKHOUSE_PASSWORD:strongPasswd}
  connectionTimeout: 120000
  socketTimeout: 100000
  compress: false
  ssl: false
  liquibase:
    change-log: "classpath:db/changelog/db.ch.changelog-main.yml"

postgresql:
  liquibase:
    change-log: "classpath:db/changelog/db.pg.changelog-main.yml"

aws-stream:
  kinesisEndpoint: 'fake-endpoint'
  dinamoDbEndpoint: 'fake-endpoint'
  accessKey: fake-access-key
  secretKey: fake-secret-key
  region: ru-central-1
  ke-stream:
    name: '/ru-central1/b1gtojcphtuae1n9siie/etnvck8jo3kuh0vilc57/ke-stream'
    maxRecords: 50
    timeoutInSec: 120
    failOverTimeMillis: 60000
    consumerName: ke-analytics-consumer
  payment-stream:
    name: '/ru-central1/b1gtojcphtuae1n9siie/etnvck8jo3kuh0vilc57/payment'
    maxRecords: 50
    timeoutInSec: 120
    failOverTimeMillis: 60000
    consumerName: ke-payment-consumer

